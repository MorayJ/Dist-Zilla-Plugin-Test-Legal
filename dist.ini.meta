name             = Dist-Zilla-Plugin-Test-Legal
author           = Alan Young <harleypig@gmail.com>
license          = Perl_5
copyright_holder = Alan Young
copyright_year   = 2014

; !!!
; !!! see https://metacpan.org/module/Dist::Zilla::PluginBundle::DAGOLDEN
; !!! for annotation, add my own.  Break out tests into dist, author and
; !!! release tests?
; !!!

; Use ReportPhase to get this information.

; Phases for 'dzil build'
;   Before Build
;   File Gatherer (Gather Files)
;   File Pruner (Prune Files)
;   Version Provider (Provide Version)
;   File Munger (Munge Files)
;     Meta Provider (Metadata)
;   Bundle Config
;   Install Tool (Setup Installer)
;     Share Dir
;   After Build
;   Before Archive

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;[ReportPhase/PhaseBegins]
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[BlockRelease]
;[VerifyPhases]

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Author prereqs not detected by Dist::Zilla
;
; SKIP authordep Code::TidyAll
; SKIP authordep Dist::Zilla::Plugin::BlockRelease
; SKIP authordep Dist::Zilla::PluginBundle::Git::CheckFor
; SKIP authordep Dist::Zilla::Plugin::CheckChangeLog
; SKIP authordep Dist::Zilla::Plugin::CheckChangesHasContent
; SKIP authordep Dist::Zilla::Plugin::Clean
; SKIP authordep Dist::Zilla::Plugin::ConsistentVersionTest
; SKIP authordep Dist::Zilla::Plugin::CopyReadmeFromBuild
; SKIP authordep Dist::Zilla::Plugin::Git
; SKIP authordep Dist::Zilla::Plugin::Git::NextVersion::Sanitized
; SKIP authordep Dist::Zilla::Plugin::HasVersionTests
; SKIP authordep Dist::Zilla::Plugin::InstallGuide
; SKIP authordep Dist::Zilla::Plugin::NoSmartCommentsTests
; SKIP authordep Dist::Zilla::Plugin::OurPkgVersion
; SKIP authordep Dist::Zilla::Plugin::PerlTidy
; SKIP authordep Dist::Zilla::Plugin::PodWeaver
; SKIP authordep Dist::Zilla::Plugin::PodWeaverIfPod
; SKIP authordep Dist::Zilla::Plugin::Prereqs::AuthorDeps
; SKIP authordep Dist::Zilla::Plugin::ReadmeFromPod
; SKIP authordep Dist::Zilla::Plugin::ReportVersions
; SKIP authordep Dist::Zilla::Plugin::ReportVersions::Tiny
; SKIP authordep Dist::Zilla::Plugin::Test::CheckChanges
; SKIP authordep Dist::Zilla::Plugin::Test::CheckDeps
; SKIP authordep Dist::Zilla::Plugin::Test::CheckManifest
; SKIP authordep Dist::Zilla::Plugin::Test::CleanNamespaces
; SKIP authordep Dist::Zilla::Plugin::Test::Compile
; SKIP authordep Dist::Zilla::Plugin::Test::Compile::PerFile
; SKIP authordep Dist::Zilla::Plugin::Test::CPAN::Changes
; SKIP authordep Dist::Zilla::Plugin::Test::CPAN::Meta::JSON
; SKIP authordep Dist::Zilla::Plugin::Test::DistManifest
; SKIP authordep Dist::Zilla::Plugin::Test::EOF
; SKIP authordep Dist::Zilla::Plugin::Test::EOL
; SKIP authordep Dist::Zilla::Plugin::Test::Inline
; SKIP authordep Dist::Zilla::Plugin::Test::Kwalitee
; SKIP authordep Dist::Zilla::Plugin::Test::Kwalitee::Extra
; SKIP authordep Dist::Zilla::Plugin::Test::MinimumVersion
; SKIP authordep Dist::Zilla::Plugin::Test::NoTabs
; SKIP authordep Dist::Zilla::Plugin::Test::PAUSE::Permissions
; SKIP authordep Dist::Zilla::Plugin::Test::Perl::Critic
; SKIP authordep Dist::Zilla::Plugin::Test::Pod::LinkCheck
; SKIP authordep Dist::Zilla::Plugin::Test::Pod::No404s
; SKIP authordep Dist::Zilla::Plugin::Test::PodSpelling
; SKIP authordep Dist::Zilla::Plugin::Test::ReportPrereqs
; SKIP authordep Dist::Zilla::Plugin::Test::UnusedVars
; SKIP authordep Dist::Zilla::Plugin::Test::UseAllModules
; SKIP authordep Dist::Zilla::Plugin::Test::Version
; SKIP authordep Dist::Zilla::TravisCI
; SKIP authordep Perl::Critic::Bangs
; SKIP authordep Perl::Critic::Compatibility
; SKIP authordep Perl::Critic::Deprecated
; SKIP authordep Perl::Critic::Itch
; SKIP authordep Perl::Critic::Lax
; SKIP authordep Perl::Critic::More
; SKIP authordep Perl::Critic::Nits
; SKIP authordep Perl::Critic::OTRS
; SKIP authordep Perl::Critic::PetPeeves::JTRAMMELL
; SKIP authordep Perl::Critic::Policy::CodeLayout::ProhibitSpaceIndentation
; SKIP authordep Perl::Critic::Policy::CodeLayout::TabIndentSpaceAlign
; SKIP authordep Perl::Critic::Policy::logicLAB::ModuleBlacklist
; SKIP authordep Perl::Critic::Policy::logicLAB::ProhibitShellDispatch
; SKIP authordep Perl::Critic::Policy::logicLAB::ProhibitUseLib
; SKIP authordep Perl::Critic::Policy::logicLAB::RequirePackageNamePattern
; SKIP authordep Perl::Critic::Policy::logicLAB::RequireParamsValidate
; SKIP authordep Perl::Critic::Policy::ValuesAndExpressions::PreventSQLInjection
; SKIP authordep Perl::Critic::Policy::Variables::ProhibitUnusedVarsStricter
; SKIP authordep Perl::Critic::Pulp
; SKIP authordep Perl::Critic::Storable
; SKIP authordep Perl::Critic::StricterSubs
; SKIP authordep Perl::Critic::Swift
; SKIP authordep Perl::Critic::Tics
; authordep Pod::Elemental::Transformer::List
; authordep Pod::Elemental::Transformer::List::Converter
; authordep Pod::Weaver::Plugin::EnsureUniqueSections
; authordep Pod::Weaver::Plugin::StopWords
; authordep Pod::Weaver::Section::Availability
; authordep Pod::Weaver::Section::Installation
; authordep Pod::Weaver::Section::SeeAlso
; authordep Pod::Weaver::Section::SourceGitHub
; authordep Pod::Weaver::Section::Support
; authordep Pod::Weaver::Section::WarrantyDisclaimer

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;Phase: Before Build
; - description: something that runs before building really begins

[PromptIfStale]
check_all_plugins = 1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;Phase: File Gatherer (Gather Files)
; - description: something that gathers files into the distribution

;[PodInherit] don't have need for this at the moment, but keeping it here just in case
;[Pod2Html] could be used for gh-pages

[GatherDir]
include_dotfiles = 1
prune_directory = .git

[CPANFile]
[License]
[MetaJSON]
[MetaYAML]

; Tests

[ConsistentVersionTest]
[HasVersionTests]
[MetaTests]
[NoSmartCommentsTests]
[PodCoverageTests]
[PodSyntaxTests]
[ReportVersions]

[Test::ChangesHasContent]
[Test::CheckChanges]
[Test::CheckDeps]
[Test::CheckManifest]
[Test::CleanNamespaces]
[Test::Compile]
[Test::Compile::PerFile]
[Test::CPAN::Changes]
[Test::CPAN::Meta::JSON]
[Test::DistManifest]
;[Test::EOF]
[Test::EOL]
[Test::Inline]
[Test::Kwalitee]
;[Test::Legal] doesn't make sense in this dist.
[Test::MinimumVersion]
[Test::NoTabs]
;[Test::PAUSE::Permissions]
[Test::Pod::LinkCheck]
[Test::Pod::No404s]
[Test::ReportPrereqs]
;[Test::Synopsis] doesn't make sense in this dist.
[Test::UnusedVars] ; requires 5.10
[Test::UseAllModules]
[Test::Version]

;Use in conjunction with [Breaks]
;[Test::CheckBreaks]
;conflicts_module = Foo::Bar

[Test::Perl::Critic]
;critic_config = .perlcriticrc

[Test::PodSpelling]
wordlist = Pod::Wordlist
spell_cmd = aspell list
stopwords = LICENCE
stopwords = MERCHANTABILITY

[InstallGuide]
[Manifest]

;Shows up in dumpphases here.
; * ReadmeAnyFromPod => Dist::Zilla::Plugin::ReadmeAnyFromPod
; * PodRoot => Dist::Zilla::Plugin::ReadmeAnyFromPod
; * ModuleBuild => Dist::Zilla::Plugin::ModuleBuild

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;Phase: File Pruner (Prune Files)
; - description: something that removes found files from the distribution

[ManifestSkip]

[PruneFiles]
filename = cover
filename = dist.ini
filename = docs
filename = weaver.ini
match = ^\..*\.sw.$ ; skip any vim swap files

[PruneCruft]
except = \.perl.*
;except = \.perlcriticrc
;except = \.perltidyrc

;Shows up in dumpphases here.
; * Test::CPAN::Meta::JSON => Dist::Zilla::Plugin::Test::CPAN::Meta::JSON
; * Git::NextVersion => Dist::Zilla::Plugin::Git::NextVersion
; * ReadmeAnyFromPod => Dist::Zilla::Plugin::ReadmeAnyFromPod
; * PodRoot => Dist::Zilla::Plugin::ReadmeAnyFromPod

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;Phase: Version Provider (Provide Version)
; - description: something that provides a version number for the dist

[Git::NextVersion]
first_version = 0.01

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;Phase: File Munger (Munge Files)
; - description: something that alters a file's destination or content

[ExtraTests]
[NextRelease]
[OurPkgVersion]

[PodWeaver]

[ReadmeAnyFromPod]
[ReadmeAnyFromPod / PodRoot]
filename = README.pod

[PerlTidy]

;Shows up in dumpphases here.
; * Test::ChangesHasContent => Dist::Zilla::Plugin::Test::ChangesHasContent
; * Test::CleanNamespaces => Dist::Zilla::Plugin::Test::CleanNamespaces
; * Test::Compile => Dist::Zilla::Plugin::Test::Compile
; * Test::NoTabs => Dist::Zilla::Plugin::Test::NoTabs
; * Test::PodSpelling => Dist::Zilla::Plugin::Test::PodSpelling
; * InstallGuide => Dist::Zilla::Plugin::InstallGuide

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;Phase: Meta Provider (Metadata)
; - description: something that provides metadata (for META.yml/json)

;[Breaks]
;Foo::Bar = <= 1.1

[GitHub::Meta]

[MetaNoIndex]
directory = t
directory = xt

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;Phase: Bundle Config
; - description: not sure

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;Phase: Install Tool (Installer)
; - description: something that creates an install program for a dist

[CheckChangeLog]

[ModuleBuild]
; https://github.com/Perl-Toolchain-Gang/Module-Build/issues/48
mb_version = 0.4208

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;Phase: Share Dir
; - description: something that picks a directory to install as shared files

[ShareDir]

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;Phase: After Build
; - description: something that runs after building is mostly complete

[CheckSelfDependency]

;[GitHubREADME::Badge]

;Shows up in dumpphases here.
; * ReadmeAnyFromPod => Dist::Zilla::Plugin::ReadmeAnyFromPod
; * PodRoot => Dist::Zilla::Plugin::ReadmeAnyFromPod
; * PromptIfStale => Dist::Zilla::Plugin::PromptIfStale
; * Git::Check => Dist::Zilla::Plugin::Git::Check

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;Phase: Before Archive
; - description: something that runs before the archive file is built

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;Phase: ExecFiles

[ExecDir]

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;Phase: Register Prereqs

; NOTE: This is being called sometime during 'dzil build' but is not
;       being reported by ReportPhase, so I'm not sure where this
;       belongs in the list at the top of this file.

[AutoPrereqs]

[Prereqs::AuthorDeps]

[Prereqs / ConfigureRequires]
; perl 5.8.9 isn't installing MB::Version
Module::Build::Version = 0

;[Prereqs / ConfigureRecommends]
;[Prereqs / ConfigureSuggests]
;[Prereqs / ConfigureConflicts]

[Prereqs / BuildRequires]
;Module::Build::Version   = 0

;[Prereqs / BuildRecommends]
;[Prereqs / BuildSuggests]
;[Prereqs / BuildConflicts]

[Prereqs / TestRequires]
;Test::CheckChanges        = 0
;Test::CheckManifest       = 0
;Test::ConsistentVersion   = 0
;Test::CPAN::Meta::JSON    = 0
;Test::DistManifest        = 0
;Test::HasVersion          = 0
;Test::MinimumVersion      = 0
;Test::NoSmartComments     = 0
;;Test::PAUSE::Permissions  = 0
;Test::Perl::Critic        = 0
;Test::Pod::Content        = 0
;Test::Pod::LinkCheck      = 0
;Test::Version             = 0

;[Prereqs / TestRecommends]
;[Prereqs / TestSuggests]
;[Prereqs / TestConflicts]

[Prereqs / RuntimeRequires]

;[Prereqs / RuntimeRecommends]
;[Prereqs / RuntimeSuggests]
;[Prereqs / RuntimeConflicts]

[Prereqs / DevelopRequires]
;Code::TidyAll                                                   = 0
;Dist::Zilla::Plugin::BlockRelease                               = 0
;Dist::Zilla::PluginBundle::Git::CheckFor                        = 0
;Dist::Zilla::Plugin::CheckChangeLog                             = 0
;Dist::Zilla::Plugin::CheckChangesHasContent                     = 0
;Dist::Zilla::Plugin::Clean                                      = 0
;Dist::Zilla::Plugin::ConsistentVersionTest                      = 0
;Dist::Zilla::Plugin::CopyReadmeFromBuild                        = 0
;Dist::Zilla::Plugin::Git                                        = 0
;Dist::Zilla::Plugin::Git::NextVersion::Sanitized                = 0
;Dist::Zilla::Plugin::HasVersionTests                            = 0
;Dist::Zilla::Plugin::InstallGuide                               = 0
;Dist::Zilla::Plugin::NoSmartCommentsTests                       = 0
;Dist::Zilla::Plugin::OurPkgVersion                              = 0
;Dist::Zilla::Plugin::PerlTidy                                   = 0
;Dist::Zilla::Plugin::PodWeaver                                  = 0
;Dist::Zilla::Plugin::PodWeaverIfPod                             = 0
;Dist::Zilla::Plugin::Prereqs::AuthorDeps                        = 0
;Dist::Zilla::Plugin::ReadmeFromPod                              = 0
;Dist::Zilla::Plugin::ReportVersions                             = 0
;Dist::Zilla::Plugin::ReportVersions::Tiny                       = 0
;Dist::Zilla::Plugin::Test::CheckChanges                         = 0
;Dist::Zilla::Plugin::Test::CheckDeps                            = 0
;Dist::Zilla::Plugin::Test::CheckManifest                        = 0
;Dist::Zilla::Plugin::Test::CleanNamespaces                      = 0
;Dist::Zilla::Plugin::Test::Compile                              = 0
;Dist::Zilla::Plugin::Test::Compile::PerFile                     = 0
;Dist::Zilla::Plugin::Test::CPAN::Changes                        = 0
;Dist::Zilla::Plugin::Test::CPAN::Meta::JSON                     = 0
;Dist::Zilla::Plugin::Test::DistManifest                         = 0
;;Dist::Zilla::Plugin::Test::EOF                                  = 0
;Dist::Zilla::Plugin::Test::EOL                                  = 0
;Dist::Zilla::Plugin::Test::Inline                               = 0
;Dist::Zilla::Plugin::Test::Kwalitee                             = 0
;Dist::Zilla::Plugin::Test::Kwalitee::Extra                      = 0
;Dist::Zilla::Plugin::Test::MinimumVersion                       = 0
;Dist::Zilla::Plugin::Test::NoTabs                               = 0
;;Dist::Zilla::Plugin::Test::PAUSE::Permissions                   = 0
;Dist::Zilla::Plugin::Test::Perl::Critic                         = 0
;Dist::Zilla::Plugin::Test::Pod::LinkCheck                       = 0
;Dist::Zilla::Plugin::Test::Pod::No404s                          = 0
;Dist::Zilla::Plugin::Test::PodSpelling                          = 0
;Dist::Zilla::Plugin::Test::ReportPrereqs                        = 0
;Dist::Zilla::Plugin::Test::UnusedVars                           = 0
;Dist::Zilla::Plugin::Test::UseAllModules                        = 0
;Dist::Zilla::Plugin::Test::Version                              = 0
;Dist::Zilla::TravisCI                                           = 0
;Perl::Critic::Bangs                                             = 0
;Perl::Critic::Compatibility                                     = 0
;Perl::Critic::Deprecated                                        = 0
;Perl::Critic::Itch                                              = 0
;Perl::Critic::Lax                                               = 0
;Perl::Critic::More                                              = 0
;Perl::Critic::Nits                                              = 0
;Perl::Critic::OTRS                                              = 0
;Perl::Critic::PetPeeves::JTRAMMELL                              = 0
;Perl::Critic::Policy::CodeLayout::ProhibitSpaceIndentation      = 0
;Perl::Critic::Policy::CodeLayout::TabIndentSpaceAlign           = 0
;Perl::Critic::Policy::logicLAB::ModuleBlacklist                 = 0
;Perl::Critic::Policy::logicLAB::ProhibitShellDispatch           = 0
;Perl::Critic::Policy::logicLAB::ProhibitUseLib                  = 0
;Perl::Critic::Policy::logicLAB::RequirePackageNamePattern       = 0
;Perl::Critic::Policy::logicLAB::RequireParamsValidate           = 0
;Perl::Critic::Policy::ValuesAndExpressions::PreventSQLInjection = 0
;Perl::Critic::Policy::Variables::ProhibitUnusedVarsStricter     = 0
;Perl::Critic::Pulp                                              = 0
;Perl::Critic::Storable                                          = 0
;Perl::Critic::StricterSubs                                      = 0
;Perl::Critic::Swift                                             = 0
;Perl::Critic::Tics                                              = 0
;Pod::Elemental::Transformer::List                               = 0
;Pod::Elemental::Transformer::List::Converter                    = 0
;Pod::Weaver::Plugin::EnsureUniqueSections                       = 0
;Pod::Weaver::Plugin::StopWords                                  = 0
;Pod::Weaver::Section::Availability                              = 0
;Pod::Weaver::Section::Installation                              = 0
;Pod::Weaver::Section::SeeAlso                                   = 0
;Pod::Weaver::Section::SourceGitHub                              = 0
;Pod::Weaver::Section::Support                                   = 0
;Pod::Weaver::Section::WarrantyDisclaimer                        = 0

;[Prereqs / DevelopRecommends]
;[Prereqs / DevelopSuggests]
;[Prereqs / DevelopConflicts]

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;Phase: Before Release
; - description: something that runs before release really begins

[CheckChangesHasContent]
[CheckExtraTests]
[CheckIssues]
[CheckMetaResources]

;[PromptIfStale] can be here, but I want to take care of this during development.

[Git::Check]
allow_dirty = dist.ini
allow_dirty = weaver.ini
allow_dirty = README
allow_dirty = .travis.yml

[TestRelease]
[Travis::TestRelease]
[ConfirmRelease]

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;Phase: Releaser
; - description: something that makes a release of the dist
; Uncomment [Twitter] when switching to [UploadToCPAN]
[FakeRelease]
;[UploadToCPAN]

;[Run::Release]

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;Phase: After Release
; - description: something that runs after release is mostly complete

;[Git::Commit]

;[Git::CommitBuild]
;branch = build/%b
;release_branch = release
;message = %h

;[Git::Tag]
;tag_format = v%v
;branch = release

;[Git::Push]
;push_to = origin
;push_to = origin HEAD:refs/head/release
;push_to = origin HEAD:refs/notes/commits

;[Twitter]
;tweet = Released {{$DIST}}-{{$VERSION}}{{$TRIAL}} {{$URL}} - {{$ABSTRACT}}
;hash-tags = #perl #cpan

[Clean]

;[BumpVersionAfterRelease]
;[CopyFilesFromRelease]
;[SchwartzRatio]

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Not going to use

;[AbstractFromPOD]
;[AssertOS]
;[AutoVersion]
;[Bugtracker] superceded by GitHub::Meta
;[BuildSelf]
;[BumpVersionFromGit]
;[ChangelogFromGit]
;[ChangeStats::Git]
;[CheckBin]
;[CheckLib]
;[CoalescePod]
;[CoderwallEndorse]
;[Conflicts]
;[ContributorsFile]
;[CopyReadmeFromBuild] superceded by ReadmeAnyFromPod
;[CopyTo]
;[Covenant]
;[CustomLicense]
;[Encoding] keeps causing errors
;[EnsureNotStale] same as [PromptIfStale] with fatal set
;[EnsurePrereqsInstalled]
;[FakeFaker]
;[FatPacker]
;[GitFmtChanges]
;[GitHub::Create] don't want to automatically create repos on github
;[GithubMeta] superceded by GitHub::Meta
;[GitHub] not really a plugin, use Create, Meta and/or Update
;[GitHub::Update]
;[Git::NextRelease]
;[HelpWanted]
;[InlineFiles] this is an abstract class
;[InlineIncluder]
;[InsertExample]
;[ManifestInRoot]
;[MatchManifest] depends on Encoding, which I can't get working
;[MetaData::BuiltWith]
;[MetaData::BuiltWith::All]
;[MetaProvides]
;[MetaProvides::Class]
;[MetaProvides::FromFile]
;[MetaProvides::Package]
;[MetaResourcesFromGit] [GitHub::Meta] superceds this
;[ModuleBuildTiny::Fallback]
;[ModuleInstall]
;[NextVersion::Semantic]
;[NoAutomatedTesting]
;[OnlyCorePrereqs]
;[OSPrereqs]
;[OurDate]
;[OverridePkgVersion]
;[PerlVersionPrereqs]
;[PkgDist]
;[PkgVersion]
;[PkgVersionIfModuleWithPod]
;[PodVersion] does [PodWeaver] do this?
;[PodWeaverIfPod]
;[Precompute]
;[Prepender]
;[Readme]
;[ReadmeFromPod] use ReadmeAnyFromPod instead
;[ReportVersions::Tiny]
;[ReversionOnRelease]
;[RewriteVersion]
;[RewriteVersion::Sanitized]
;[SetScriptShebang]
;[ShareDir::Tarball]
;[Signature]
;[SpellingCommonMistakesTests] too old
;[StaticVersion]
;[SubmittingPatches]
;[Test::CreateFromMojoTemplates]
;[Test::Fixme]
;[Test::Kwalitee::Extra] overlaps and conflicts with Test::Kwalitee
;[Test::LocalBrew]
;[TestMLIncluder]
;[Test::Portability] not interested in worrying about portability
;[TextTabs]
;[TravisYML] can't get the .travis.yml file generated properly

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; DEPRECATED

;[CriticTests]         use Test::Perl::Critic
;[EOLTests]            use Test::EOL
;[MinimumVersionTests] use Test::MinimumVersion
;[NoTabsTests]         use Test::NoTabs
;[PodSpellingTests]    use Test::PodSpelling
;[Prereq]              use Prereqs
;[SynopsisTests]       use Test::Synopsis
;[UnusedVarsTests]     use Test::UnusedVars

;[FileKeywords]
;[BumpVersion]

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; To be examined later

;[AppendExternalData]
;[AssertOS]
;[Authority]
;[AuthorityFromModule]
;[AutoModuleShareDirs]
;[Conflicts]
;[Covenant]
;[DynamicPrereqs]
;[GenerateFile]
;[GenerateFile::ShareDir]
;[Git]
;[Git::Contributors]
;[Git::DescribeVersion]
;[Git::ExcludeUntracked]
;[Git::GatherDir]
;[Git::Init]
;[Git::NextVersion::Sanitized]
;[Git::Remote::Check]
;[Git::Remote::Check::BeforeBuild]
;[Git::Remote::Update]
;[Git::Remote::Update::BeforeBuild]
;[Homepage]
;[if]
;[if::ENV]
;[if::not]
;[if::not::ENV]
;[MetaConfig]
;[Meta::Dynamic::Config]
;[MetaResources]
;[ModuleBuildDatabase]
;[ModuleBuild::OptionalXS]
;[ModuleBuild::RequireXS]
;[ModuleBuildTiny]
;[ModuleBuildTiny::Fallback]
;[ModuleBuild::XSOrPP]
;[ModuleIncluder]
;[ModuleShareDirs]
;[MungeFile::WithConfigFile]
;[MungeFile::WithData]
;[MungeFile::WithDataSection]
;[OptionalFeature]
;[Prereqs::FromCPANfile]
;[PurePerlTests]
;[ReleaseOnlyWithLatest]
;[RemovePrereqs]
;[RemovePrereqsMatching]
;[Repository]
;[RPM::Push]
;[Rsync]
;[Run]
;[Run::AfterBuild]
;[Run::AfterMint]
;[Run::AfterRelease]
;[Run::BeforeBuild]
;[Run::BeforeRelease]
;[Run::Role::Runner]
;[ScpDeploy]
;[ShareDir::Tarball]
;[Test::DiagINC]
;[Upload::SCP]
;[UploadToCpanSite]
;[VersionFromScript]

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;[ReportPhase/PhaseEnds]
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
